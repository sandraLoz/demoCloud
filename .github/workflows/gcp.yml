name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - "master"
env:
  PROJECT_ID: opplus-cloud-352011 # TODO: update Google Cloud project id
  GAR_LOCATION: europe-southwest1 # TODO: update Artifact Registry location
  SERVICE: demo-cloud # TODO: update Cloud Run service name
  REGION: europe-southwest1 # TODO: update Cloud Run service region

jobs:

  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

     # - name: Automatic Tagging of Releases
     # id: increment-git-tag
     # run: |
     #    bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet
        

    - name: Push Docker Image to Container Registry (GCR)              
      run: |-
        docker tag $IMAGE_NAME:latest eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        docker push eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

    - name: Push Docker Image to Artifact Registry      
      run: |-
        docker tag $IMAGE_NAME:latest europe-southwest1-docker.pkg.dev/$PROJECT_ID/demo-cloud/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest europe-southwest1-docker.pkg.dev/$PROJECT_ID/demo-cloud/$IMAGE_NAME:$GIT_TAG
        docker push europe-southwest1-docker.pkg.dev/$PROJECT_ID/demo-cloud/$IMAGE_NAME:latest
        docker push europe-southwest1-docker.pkg.dev/$PROJECT_ID/demo-cloud/$IMAGE_NAME:$GIT_TAG

  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #- name: Google Auth
      #  id: auth
      #  uses: 'google-github-actions/auth@v0'
      #  with:
      #    workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
      #    service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
         id: auth
         uses: 'google-github-actions/auth@v0'
         with:
           credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If required, update to the appropriate source folder
          source: ./

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}